#include <iostream>

using namespace std;

int main() {
    int N = 4;

    // 1 oперанди
    int a = 18 - N;        // 14,         (в двійковій: 0000000000...00001110)
    int opAnd1 = 89 - N;   // 85,         (в двійковій: 0000000000...0001010101)
    int opOr1 = 134 - N;   // 130,        (в двійковій: 0000000000...00010000010)
    int opXor1 = 34 - N;   // 30,         (в двійковій: 0000000000...00011110)
    int opShiftL = 907 - N; // 903,       (в двійковій: 0000000000...1101110111)
    int opShiftR = -95 - N; // -99,       (в двійковій: 1111111111...1110011101)

    // 2 операнди
    int opAnd2 = 122 - N;  // 118,        (в двійковій: 0000000000000...0001110110)
    int opOr2 = 65 - N;    // 61,         (в двійковій: 000000000...000000111101)
    int opXor2 = 78 - N;   // 74,         (в двійковій: 0000000000...0001001010)
    int shiftnum = N + 1;  // 5,          (в двійковій: 0000000000...00000101)

    // Порозрядне заперечення (NOT)
    int notA = ~a;  // Результат: -15, 1111111111...11110001

    // Порозрядне “І” (AND)
    int opAndResult = opAnd1 & opAnd2; // Результат: 84, 0000000000...01010100

    // Порозрядне “АБО” (OR)
    int opOrResult = opOr1 | opOr2;  // Результат: 191, 0000000000...10111111

    // Порозрядне “АБО”, яке виключає (XOR)
    int opXorResult = opXor1 ^ opXor2; // Результат: 84, 0000000000...01010100

    // Порозрядний зсув ліворуч
    int opShiftLResult = opShiftL << shiftnum;  // Результат: 28896, 00000000...1011010111000

    // Порозрядний зсув праворуч
    int opShiftRResult = opShiftR >> shiftnum; // Результат: -4, 1111111111...11111100

    // Виведення операндів
    cout << a << " " << opAnd1 << " " << opAnd2 << " " << opOr1 << " " << opOr2 << " " << opXor1 << " " << opXor2 << " " << opShiftL << " " << opShiftR << endl;

    // Виведення результатів операцій
    cout << notA << " " << opAndResult << " " << opOrResult << " " << opXorResult << " " << opShiftLResult << " " << opShiftRResult << endl;

    return 0;
}
